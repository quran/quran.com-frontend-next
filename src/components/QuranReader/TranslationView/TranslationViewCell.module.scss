@use "src/styles/breakpoints";
@use "src/styles/utility";

.cellContainer {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  direction: ltr;
  padding: var(--spacing-small);
  --gap-size: calc(0.5 * var(--spacing-mega));
}

.highlightedContainer {
  background: var(--color-background-alternative-faded);
}

.contentContainer {
  flex: 1;
  position: relative;
}

.actionContainer {
  margin-block-start: var(--gap-size);
  display: flex;
  direction: ltr;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}
.arabicVerseContainer {
  direction: rtl;
  padding-block-start: var(--spacing-xxsmall);
  margin-block-start: var(--gap-size);
  margin-block-end: var(--gap-size);
}
.verseTranslationsContainer {
  margin-block-end: calc(1.3 * var(--gap-size));
}

.verseTranslationContainer {
  margin-block-end: var(--spacing-mega);
}

.actionContainerLeft,
.actionContainerRight {
  display: flex;
  align-items: center;
}
.actionContainerLeft {
  justify-content: flex-start;
}
.actionContainerRight {
  justify-content: flex-end;
}

.iconContainer.verseAction {
  color: var(--color-text-default);
  height: calc(2.2 * var(--spacing-medium));
  width: calc(2.2 * var(--spacing-medium));

  &:hover {
    color: var(--color-text-default);
    background-color: transparent;
    background-image: none;
  }

  @media (hover: hover) {
    &:hover {
      color: var(--color-success-medium);
      background-color: var(--color-success-medium);
      @include utility.lighten-background-color;

      .icon span {
        svg {
          color: var(--color-success-medium) !important;
        }
      }
    }
  }
}

.overlayMax {
  z-index: var(--z-index-max);
}

.overlayModal {
  z-index: var(--z-index-header);
}

.menuOffset {
  margin-inline-end: calc(var(--spacing-medium) * 1.125);
}

.icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  svg {
    width: var(--spacing-medium2);
    height: var(--spacing-medium2);
  }

  @include breakpoints.smallerThanTablet {
    width: var(--spacing-medium);
    height: var(--spacing-medium);
  }
}

.actionItem {
  &:hover {
    svg {
      color: var(--color-success-medium);
    }
  }
}

// fix optical illussion for triangle icon inside circle button
.playIcon {
  /* stylelint-disable-next-line csstools/use-logical */
  margin-left: calc(0.5 * var(--spacing-xxsmall));
}

.actionContainerLeft .actionItem {
  display: inline-block;
  margin-inline-end: calc(0.5 * var(--spacing-xxsmall));
  @include breakpoints.tablet {
    margin-inline-end: 0;
  }
}

.bottomActionsContainer {
  width: 100%;
}

.tabsContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--spacing-medium);

  @media (min-width: 768px) {
    gap: var(--spacing-large);
  }
}

.center {
  justify-content: center;
}

.separatorContainer {
  display: flex;
  height: var(--spacing-medium);
  align-items: center;
}

.tabItem {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: calc(var(--spacing-xsmall) / 2);
  cursor: pointer;
  color: var(--color-grey-icons-new);
  transition: color 0.2s ease;

  &:hover {
    color: var(--color-success-medium);
  }
}

.tabIcon {
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: var(--spacing-medium2);
    height: var(--spacing-medium2);
    color: currentColor;

    &:hover {
      color: currentColor;
    }

    @include breakpoints.smallerThanTablet {
      width: var(--spacing-medium);
      height: var(--spacing-medium);
    }
  }
}

.tabLabel {
  font-size: var(--font-size-medium);
  white-space: nowrap;

  @include breakpoints.smallerThanTablet {
    font-size: var(--font-size-small);
  }
}
