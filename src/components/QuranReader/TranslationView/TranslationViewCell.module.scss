@use "src/styles/breakpoints";
@use "src/styles/utility";

.cellContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: var(--spacing-small);
  @include breakpoints.tablet {
    padding: var(--spacing-mega) 0;
  }
}

.highlightedContainer {
  background: var(--color-background-alternative-faded);
}

.contentContainer {
  flex: 1;
  position: relative;
}

.actionContainer {
  display: flex;
  direction: ltr;
  flex-direction: column;
  align-items: center;
  margin-inline-end: var(--spacing-medium);
}
.arabicVerseContainer {
  direction: rtl;
  padding-block: var(--spacing-mega);
  padding-block: var(--spacing-mega);
}
.verseTranslationContainer {
  padding-block-end: 0;
}
.translationContainer {
  padding-block-end: var(--spacing-xsmall);
}

.actionContainerLeft,
.actionContainerRight {
  display: flex;
  align-items: center;
}
.actionContainerLeft {
  justify-content: flex-start;
}
.actionContainerRight {
  justify-content: flex-end;
}

.actionContainerLeft > .actionItem + .actionItem,
.actionContainerRight > .actionItem + .actionItem {
  margin-inline-start: var(--spacing-xxsmall);
}

.iconContainer.verseAction {
  color: var(--color-text-default);
  height: calc(2.2 * var(--spacing-medium));
  width: calc(2.2 * var(--spacing-medium));

  &:hover {
    color: var(--color-text-default);
    background-color: transparent;
    background-image: none;
  }

  @media (hover: hover) {
    &:hover {
      color: var(--color-success-medium);
      background-color: var(--color-success-medium);
      @include utility.lighten-background-color;
    }
  }
}
.icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  & > svg {
    width: calc(1.1 * var(--spacing-medium));
    height: calc(1.1 * var(--spacing-medium));
  }
}

// fix optical illussion for triangle icon inside circle button
.playIcon {
  /* stylelint-disable-next-line csstools/use-logical */
  margin-left: calc(0.5 * var(--spacing-xxsmall));
}
