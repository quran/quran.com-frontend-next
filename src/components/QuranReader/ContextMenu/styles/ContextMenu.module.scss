@use "src/styles/constants";
@use "src/styles/breakpoints";

$sections-container-height: 2.25rem;
$pixel: 1px;

.container {
  background: var(--color-background-default);
  background: var(--color-background-elevated);
  box-shadow: var(--shadow-small);
  color: var(--color-text-default);
  text-align: center;
  position: fixed;
  z-index: var(--z-index-sticky);
  transition: transform var(--transition-regular);
  width: 100%;
  inset-block-start: calc($pixel * -1);
  padding-bottom: $pixel;
  min-height: var(--spacing-medium);
  will-change: transform;
  &:after {
    display: block;
    content: "";
    width: var(--progress);
    transition: var(--transition-fast);
    transition-timing-function: linear;
    height: var(--spacing-micro);
    background: var(--color-success-deep);
    inset-block-end: calc(-1 * var(--spacing-micro));
  }
}

.hide {
  display: none;
  height: 0;
  visibility: hidden;
}

.visibleContainer {
  transform: translate3d(0, var(--navbar-container-height), 0);
  // https://ptgamr.github.io/2014-09-13-translate3d-vs-translate-performance/
}

.withVisibleBanner {
  transform: translate3d(0, var(--navbar-container-height) 0);
}

.expandedContainer {
  min-height: var(--spacing-mega);
}

.withVisibleSideBar {
  @include breakpoints.tablet {
    margin-inline-end: constants.$notes-side-bar-desktop-width;
    width: calc(100% - #{constants.$notes-side-bar-desktop-width});
  }
}

.chapter {
  font-size: var(--font-size-large);
  margin-inline: var(--spacing-large);
}

.bold {
  font-weight: var(--font-weight-bold);
}

.sectionsContainer {
  height: $sections-container-height;
  width: 100%;
  padding-block-start: var(--spacing-micro);
  padding-block-end: var(--spacing-micro);
  display: flex;
  align-items: center;
  box-sizing: border-box;
  padding-inline: calc(1.3 * var(--spacing-large));
  z-index: var(--z-index-default);
  position: relative;
  background: var(--color-background-default);
  background: var(--color-background-elevated);
  @include breakpoints.tablet {
    padding-inline: calc(1.2 * var(--spacing-mega));
  }
}

.section {
  flex: 1;
}

.readingPreferenceSection {
  div {
    margin-inline-end: 0;
    padding-inline-end: 0;
  }
}

.alignCenter {
  text-align: center;
}

.row {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  width: 100%;
}

.pageInfoContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  column-gap: var(--spacing-xsmall);
  color: var(--color-text-faded-new);
}

.bookmarkButton {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 16px;
    height: 16px;
  }
}

.unbookmarkedIcon {
  color: var(--color-text-faded-new);

  &:hover {
    color: var(--color-text-default);
  }
}
.bookmarkedIcon {
  color: var(--color-text-default);
}

.primaryInfo {
  display: flex;
  align-items: center;
  column-gap: var(--spacing-xxsmall-px);
  font-weight: var(--font-weight-semibold);
}

.secondaryInfo {
  font-weight: var(--font-weight-normal);
}

.surahName {
  display: flex;
  align-items: center;
  cursor: pointer;
}
.chevronIconContainer {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin-inline-start: var(--spacing-xxsmall);
  box-sizing: border-box;
}

.rotate180 {
  transition: var(--transition-fast);
  transform: rotate(180deg);
}

.rotateAuto {
  transition: var(--transition-fast);
  transform: rotate(0);
  @include breakpoints.tablet {
    transition: var(--transition-fast);
    transform: rotate(180deg);
  }
}

.disabledOnMobile {
  pointer-events: none;
  @include breakpoints.tablet {
    pointer-events: inherit;
  }
}

.chapterInteractiveSpan {
  cursor: pointer;
  display: flex;
  align-items: center;
}
