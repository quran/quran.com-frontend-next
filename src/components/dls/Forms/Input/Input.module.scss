@use "src/styles/theme";

.container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  &.fixedWidth {
    width: calc(8 * var(--spacing-mega));
  }
  &.disabled,
  &.disabled * {
    background: var(--color-background-alternative-medium);
    pointer-events: none;
    cursor: not-allowed;
  }
  border: 1px solid var(--color-borders-hairline);
  &.error {
    border-color: var(--color-error-deep);
  }
  &.success {
    border-color: var(--color-success-medium);
  }
  &.warning {
    border-color: var(--color-warning-medium);
  }
  border-radius: var(--border-radius-rounded);
  padding-inline: var(--spacing-small);
}

.main {
  padding-inline: var(--spacing-xsmall);
  padding-block: var(--spacing-xsmall);

  & .input {
    font-size: var(--font-size-large);
    color: var(--color-text-default);
    font-weight: var(--font-weight-semibold);
  }
}

.rtlInput {
  [dir="rtl"] & {
    direction: rtl;
  }
}

.smallContainer {
  height: var(--spacing-mega);
}
.mediumContainer {
  height: calc(2 * var(--spacing-large));
}
.largeContainer {
  height: calc(3 * var(--spacing-medium));
}

.label {
  padding-block-start: var(--spacing-micro);
  padding-block-end: var(--spacing-micro);
  padding-inline-start: 0;
  padding-inline-end: 0;
}

.input {
  padding: 0;
  margin-block-start: var(--spacing-micro);
  margin-inline-end: var(--spacing-micro);
  margin-block-end: var(--spacing-micro);
  margin-inline-start: var(--spacing-micro);
  border: 0;
  height: 80%;
  width: 100%;
  font-size: var(--font-size-normal);
  color: var(--color-text-default);
  background: transparent;
  &:focus {
    outline: none;
  }
  &:disabled {
    background: none;
  }
  &.error {
    color: var(--color-error-deep);
  }
  &.success {
    color: var(--color-success-medium);
  }
  &.warning {
    color: var(--color-warning-medium);
  }

  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px transparent inset !important;
    -webkit-text-fill-color: var(--color-text-default) !important;
    transition: background-color 5000s ease-in-out 0s;
    background-color: transparent !important;
  }
}

@mixin prefixSuffixContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  height: 100%;
}

.clearContainer {
  @include prefixSuffixContainer;
  padding-block-start: 0;
  padding-block-end: 0;
  padding-inline-start: var(--spacing-micro);
  padding-inline-end: var(--spacing-micro);
  border-start-end-radius: var(--border-radius-default);
  border-end-end-radius: var(--border-radius-default);
}

.prefixSuffixContainer {
  @include prefixSuffixContainer;
  padding-block-start: 0;
  padding-block-end: 0;
  color: var(--color-text-faded);

  > svg {
    width: var(--spacing-large);
  }
}

.prefix {
  border-start-start-radius: var(--border-radius-default);
  border-end-start-radius: var(--border-radius-default);
  padding-inline-start: var(--spacing-xsmall);
  padding-inline-end: var(--spacing-xxsmall);
}

.container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  border: 1px solid var(--color-borders-hairline);
  border-radius: var(--border-radius-rounded);
  padding-inline: var(--spacing-small);

  &.fixedWidth {
    width: calc(8 * var(--spacing-mega));
  }

  &.fullWidth {
    width: 100%;
  }

  &.disabled,
  &.disabled * {
    background: var(--color-background-alternative-medium);
    pointer-events: none;
    cursor: not-allowed;
  }

  &.error {
    border-color: var(--color-error-deep);
  }

  &.success {
    border-color: var(--color-success-medium);
  }

  &.warning {
    border-color: var(--color-warning-medium);
  }

  &.authForm {
    border-color: var(--color-border-gray-lighter);
  }
}

.smallContainer {
  @extend .container;
  height: var(--spacing-mega);
}

.mediumContainer {
  @extend .container;
  height: var(--spacing-large);
}

.largeContainer {
  @extend .container;
  height: var(--spacing-xlarge);
}

.authContainer {
  @extend .container;
  height: var(--spacing-xxlarge-px);
  border-radius: var(--border-radius-medium-px);
  border: 1px solid var(--color-border-gray-lighter);
  padding-inline: 0;
  width: 100%;

  &:hover,
  &:focus-within {
    border-color: var(--color-success-medium);
  }

  &.authForm {
    &:hover,
    &:focus-within {
      border-color: var(--color-success-medium);
    }
  }
}

.main {
  padding-inline: var(--spacing-xsmall);
  padding-block: var(--spacing-xsmall);
}

.input {
  flex: 1;
  border: none;
  outline: none;
  background-color: transparent;
  font-size: var(--font-size-normal);
  color: var(--color-text-default);

  &.disabled,
  &:disabled {
    cursor: not-allowed;
  }

  &.error {
    color: var(--color-error-deep);
  }

  &.success {
    color: var(--color-success-medium);
  }

  &.warning {
    color: var(--color-warning-medium);
  }

  &.authForm {
    color: var(--color-text-default);
  }
}

.authInput {
  @extend .input;
  padding-inline: calc(var(--spacing-xsmall-px) * 2);
  height: 100%;
  margin: 0;

  &::placeholder {
    color: var(--color-border-gray-light) !important;
  }
}

// RTL support
.rtlInput {
  [dir="rtl"] & {
    direction: rtl;
  }
}
