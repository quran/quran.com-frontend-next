$selectedItemShadow: 0px 0px 4px rgba(0, 0, 0, 0.1);

.container {
  position: relative;
  display: grid;
  background-color: var(--color-background-alternative-faint);
  border-radius: var(--border-radius-default);
  padding: calc(0.5 * var(--spacing-xxsmall));
  grid-template-columns: repeat(
    auto-fit,
    minmax(0, 1fr)
  ); // use grid to prevent layout shift when `font-family: bold` on item selected https://css-tricks.com/bold-on-hover-without-the-layout-shift/
}

.item {
  cursor: pointer;
  color: var(--color-text-default);
  background-color: transparent;
  border-radius: var(--border-radius-default);
  border: none;
  z-index: 1;
}

.item[disabled] {
  cursor: not-allowed;
  opacity: var(--opacity-50);
}

.selectedItemBackgroundContainer {
  transition: transform var(--transition-regular);
  // the `width` and the `transform` is controlled dynamically in React component. Check Switch.tsx

  position: absolute;
  height: 100%;
  z-index: 0;
  padding: calc(0.5 * var(--spacing-xxsmall));
  box-sizing: border-box;

  .selectedItemBackground {
    border-radius: var(--border-radius-default);
    box-shadow: $selectedItemShadow;
    background-color: var(--color-background-default);
    width: 100%;
    height: 100%;
  }
}

// sizing
.itemNormal {
  padding: var(--spacing-xsmall) var(--spacing-small);
  font-size: var(--font-size-normal);
}

.itemLarge {
  padding: var(--spacing-small) var(--spacing-small);
}

.itemSmall {
  font-size: var(--font-size-small);
  padding: var(--spacing-xxsmall) var(--spacing-small);
}
