@use "src/styles/breakpoints";

$translateYDistance: 200px;

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes contentIn {
  from {
    transform: translate(0, $translateYDistance);
  }
  to {
    transform: translate(0, 0px);
  }
}

@keyframes contentOut {
  from {
    transform: translate(0%, 0px);
  }
  to {
    transform: translate(0%, $translateYDistance);
  }
}

.modalContainer {
  @include breakpoints.desktop {
    max-width: initial;
    width: 60vw;
  }
}

.contentContainer {
  overflow-y: scroll;
  height: 80vh;
}

.overlay {
  z-index: var(--z-index-overlay);
  background: var(--color-background-backdrop);
  position: fixed;
  inset: 0;
  display: grid;
  place-items: center;
  @include breakpoints.tablet {
    overflow-y: auto;
  }
  box-sizing: content-box;
  padding-block-start: calc(2 * var(--spacing-mega));
  @include breakpoints.tablet {
    padding-block-start: calc(3 * var(--spacing-mega));
    padding-block-end: calc(1.5 * var(--spacing-mega));
  }
  transition: opacity var(--transition-fast) ease;
}

.contentWrapper {
  background: var(--color-background-default);
  box-sizing: border-box;
  border-radius: var(--border-radius-rounded);
  position: relative;

  width: 100vw;

  height: 100%;
  overflow-y: scroll;
  @include breakpoints.tablet {
    overflow-y: visible;
  }
}

.autoHeight {
  @include breakpoints.tablet {
    height: auto;
  }
}

// size
.medium {
  @include breakpoints.tablet {
    padding: calc(1.5 * var(--spacing-mega));
    width: 85vw;
  }
  @include breakpoints.desktop {
    width: 60vw;
  }
}

.small {
  @include breakpoints.tablet {
    padding: calc(1.5 * var(--spacing-mega));
    width: 60vw;
  }
  @include breakpoints.desktop {
    width: 40vw;
  }
}

.overlay[data-state="open"] {
  animation: fadeIn var(--transition-regular);
}
.overlay[data-state="closed"] {
  animation: fadeOut var(--transition-regular);
}

.contentWrapper[data-state="open"] {
  animation: contentIn var(--transition-regular) ease,
    fadeIn var(--transition-regular) ease;
}

.contentWrapper[data-state="closed"] {
  animation: contentOut var(--transition-regular) ease,
    fadeOut var(--transition-regular) ease;
}

.closeIcon {
  position: absolute;
  inset-block-start: 0;
  inset-inline-end: 0;
  padding-block-start: var(--spacing-xsmall);
  background-color: transparent;
  border: none;
  @include breakpoints.tablet {
    padding-block-start: var(--spacing-small);
    margin-block-start: var(--spacing-mega);
    margin-inline-end: var(--spacing-mega);
  }
}

.header {
  position: sticky;
  inset-block-start: 0;
  background-color: var(--color-background-default);
  padding-block: var(--spacing-small);
  z-index: 1;
  padding-inline: var(--spacing-small);
  @include breakpoints.tablet {
    position: initial;
    padding-inline: 0;
    border: none;
    padding: 0;
  }
  border-block-end: 1px solid var(--color-borders-hairline);
}

.content {
  padding-inline: var(--spacing-small);
  @include breakpoints.tablet {
    padding-inline: 0;
  }
}
