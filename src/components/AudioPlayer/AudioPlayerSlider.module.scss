@use "src/styles/breakpoints";
@use "src/styles/constants";

.container {
  margin-top: var(--spacing-xxsmall);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  color: var(--color-text-faded);
  font-size: var(--font-size-small);
  min-height: var(
    --font-size-small
  ); // prevents CLS when the current/total time are not loaded yet
  margin-bottom: calc(-1 * var(--spacing-xsmall));
  transition: var(--transition-regular);
  @include breakpoints.tablet {
    font-size: var(--font-size-normal);
    min-height: var(
      --font-size-normal
    ); // prevents CLS when the current/total time are not loaded yet
    margin-top: var(--spacing-medium);
    margin-bottom: calc(-2 * var(--spacing-small));
  }
}

.containerMinimized {
  @include breakpoints.smallerThanTablet {
    margin-bottom: 0;
  }
}

.sliderContainer {
  display: inline-block;
  position: fixed;
  left: 50%;
  transform: translate(-50%, 0);
  margin: 0;
  width: 100%;
  height: calc(1.25 * var(--spacing-xxsmall));
  transition: var(--transition-regular);
  bottom: constants.$audio-player-default-height;
  @include breakpoints.tablet {
    bottom: constants.$audio-player-default-desktop-height;
  }
}

.sliderContainerMinimized {
  @include breakpoints.smallerThanTablet {
    left: 50%;
    margin: 0 auto;
    width: 100%;
    transform: translate(-50%, 0);
    position: fixed;
    bottom: constants.$audio-player-minimized-height;
    span[role="slider"] {
      @include breakpoints.smallerThanTablet {
        display: none;
      }
    }
  }
}

.currentTime,
.remainingTime {
  display: inline-block;
  line-height: var(
    --line-height-normal
  ); // reset line height to normal, otherwise it will push the buttons in the audioplayer to the bottom
}
