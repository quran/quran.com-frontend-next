@use "src/styles/constants";
@use "src/styles/breakpoints";
@use "sass:map";

@mixin center-horizontally {
  display: inline-block;
  margin-block-start: auto;
  margin-inline-end: auto;
  margin-block-end: auto;
  margin-inline-start: auto;
}

@mixin center-vertically {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin lighten-background-color {
  background-image: linear-gradient(
    to right,
    var(--color-background-lighten),
    var(--color-background-lighten)
  );
}

// IMPORTANT NOTE: IF WE CHANGE ANY VALUE HERE, WE SHOULD ALSO ADAPT THE NEW VALUE TO THE FALLBACK TEXT INSIDE GLYPHWORD.MODULE.SCSS

// TEST:
// CODE V1
// - mobile
// - laptop
// CODE V2
// - mobile
// - laptop
// QPC
// - mobile
// - laptop
// Indopak
// - mobile
//  - 15 lines
//  - 16 lines
// - laptop
// Tajweed
// - mobile
// - laptop
//
// mobile with translations
// - code

// On mobile, font size 1-3 will try to preserve the line, using flex
// font 4-5 no longer using the flex. And not preserving the line
// If you're updating font size, double check on font size 3.
// It will not break the layout

$scales-map: (
  qpc_uthmani_hafs: (
    tablet: (
      1: 1.5rem,
      2: 1.8rem,
      3: 2.15rem,
      4: 2.65rem,
      5: 3.5rem,
    ),
    mobile: (
      1: 4vw,
      2: 5vw,
      3: 5.9vw,
      4: 8.9vw,
      5: 11vw,
    ),
  ),
  text_indopak: (
    tablet: (
      1: 1.5rem,
      2: 1.8rem,
      3: 2.15rem,
      4: 2.65rem,
      5: 3.5rem,
    ),
    mobile: (
      1: 4.4vw,
      2: 4.8vw,
      3: 5.4vw,
      4: 6vw,
      5: 9.3vw,
    ),
  ),
  code_v2: (
    tablet: (
      1: 1.5rem,
      2: 1.8rem,
      3: 2.15rem,
      4: 2.65rem,
      5: 3.5rem,
    ),
    mobile: (
      1: 4vw,
      2: 5vw,
      3: 5.9vw,
      4: 8.4vw,
      5: 10vw,
    ),
  ),
  code_v1: (
    tablet: (
      1: 1.8rem,
      2: 1.95rem,
      3: 2.3rem,
      4: 2.75rem,
      5: 3.5rem,
    ),
    mobile: (
      1: 4vw,
      2: 5vw,
      3: 6.3vw,
      4: 10vw,
      5: 12vw,
    ),
  ),
  translation: (
    tablet: (
      1: 1.8vw,
      2: 2.1vw,
      3: 2.5vw,
      4: 3.2vw,
      5: 4.2vw,
    ),
    mobile: (
      1: 2.5vw,
      2: 3vw,
      3: 4vw,
      4: 5vw,
      5: 6vw,
    ),
  ),
  tafsir: (
    tablet: (
      1: 1.8vw,
      2: 2.1vw,
      3: 2.8vw,
      4: 3.6vw,
      5: 4.5vw,
    ),
    mobile: (
      1: 3vw,
      2: 3.5vw,
      3: 4vw,
      4: 5vw,
      5: 6vw,
    ),
  ),
);

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function get-scales($name, $device-type) {
  @return map-deep-get($scales-map, $name, $device-type);
}

@mixin generate-font-sizes($name) {
  $mobile-scales: null;
  $desktop-scales: null;
  $tablet-scales: null;

  @if map.has-key($scales-map, $name) {
    $mobile-scales: get-scales($name, "mobile");
    $tablet-scales: get-scales($name, "tablet");
    $desktop-scales: get-scales($name, "desktop");
  } @else {
    $mobile-scales: get-scales("default", "mobile");
    $tablet-scales: get-scales("default", "tablet");
    $desktop-scales: get-scales("default", "desktop");
  }

  @for $i from 1 through constants.$maximum-font-step {
    .#{$name}-font-size-#{$i} {
      --font-size: #{map.get($mobile-scales, $i)};
      @include breakpoints.tablet {
        --font-size: #{map.get($tablet-scales, $i)};
      }
      font-size: var(--font-size);
    }
  }
}

// Sets a max-width based on the device width. Inspired by the bootstrap container (https://getbootstrap.com/docs/5.0/layout/containers/).
$large-device-width-ratio: 95%;
$max-container-width: 112rem;
@mixin container() {
  width: 100%;

  @include breakpoints.tablet {
    width: $large-device-width-ratio;
    max-width: $max-container-width;
  }
}
