@use "src/styles/constants";
@use "src/styles/breakpoints";
@use "sass:map";

@mixin center-horizontally {
  display: inline-block;
  margin-block-start: auto;
  margin-inline-end: auto;
  margin-block-end: auto;
  margin-inline-start: auto;
}

@mixin center-vertically {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin lighten-background-color {
  background-image: linear-gradient(
    to right,
    var(--color-background-lighten),
    var(--color-background-lighten)
  );
}

// On mobile, font size 1-3 will try to preserve the line, using flex
// font 4-5 no longer using the flex. And not preserving the line

// If you're updating font size, double check on font size 3.
// make sure it will not break the layout

$line-heights-map: (
  qpc_uthmani_hafs: (
    tablet: (
      1: 6vh,
      2: 6vh,
      3: 6.1vh,
      4: 6vh,
      5: 5.68vh,
    ),
  ),
  text_indopak_15_lines: (
    tablet: (
      1: 6vh,
      2: 6vh,
      3: 6.1vh,
      4: 6vh,
      5: 5.68vh,
    ),
  ),
  text_indopak_16_lines: (
    tablet: (
      1: 5.7vh,
      2: 5.7vh,
      3: 5.7vh,
      4: 5.6vh,
      5: 5.6vh,
    ),
  ),
  code_v2: (
    tablet: (
      1: 6.1vh,
      2: 6.1vh,
      3: 6.1vh,
      4: 6.1vh,
      5: 6.1vh,
    ),
  ),
  code_v1: (
    tablet: (
      1: 6.1vh,
      2: 6vh,
      3: 5.8vh,
      4: 5.4vh,
      5: 5vh,
    ),
  ),
  translation: (
    tablet: (
      1: 3.2vh,
      2: 3.5vh,
      3: 4vh,
      4: 4.2vh,
      5: 4.3vh,
    ),
  ),
  tafsir: (
    tablet: (
      1: 3.2vh,
      2: 3.5vh,
      3: 4vh,
      4: 4.2vh,
      5: 4.3vh,
    ),
  ),
);

$scales-map: (
  //TODO: rename qpc_uthmani_hafs to text_qpc_hafs
  qpc_uthmani_hafs:
    (
      tablet: (
        1: 3.2vh,
        2: 3.5vh,
        3: 4vh,
        4: 4vh,
        5: 4.4vh,
      ),
      mobile: (
        1: 4vw,
        2: 5vw,
        3: 5.4vw,
        4: 8.9vw,
        5: 11vw,
      ),
    ),
  text_indopak_15_lines: (
    tablet: (
      1: 3.2vh,
      2: 3.5vh,
      3: 4vh,
      4: 4.2vh,
      5: 4.3vh,
    ),
    mobile: (
      1: 4.4vw,
      2: 4.8vw,
      3: 5.4vw,
      4: 6vw,
      5: 9.3vw,
    ),
  ),
  text_indopak_16_lines: (
    tablet: (
      1: 3.1vh,
      2: 3.2vh,
      3: 3.4vh,
      4: 3.7vh,
      5: 3.95vh,
    ),
    mobile: (
      1: 4.4vw,
      2: 4.8vw,
      3: 5.4vw,
      4: 6vw,
      5: 9.3vw,
    ),
  ),
  code_v2: (
    tablet: (
      1: 2.9vh,
      2: 3vh,
      3: 3.2vh,
      4: 3.5vh,
      5: 3.7vh,
    ),
    mobile: (
      1: 4vw,
      2: 5vw,
      3: 5.9vw,
      4: 8.4vw,
      5: 10vw,
    ),
  ),
  code_v1: (
    tablet: (
      1: 3.5vh,
      2: 3.8vh,
      3: 4vh,
      4: 4.3vh,
      5: 4.5vh,
    ),
    mobile: (
      1: 4vw,
      2: 5vw,
      3: 6.3vw,
      4: 10vw,
      5: 12vw,
    ),
  ),
  translation: (
    tablet: (
      1: 0.85rem,
      2: 1rem,
      3: 1.18rem,
      4: 1.4rem,
      5: 2rem,
    ),
    mobile: (
      1: 0.85rem,
      2: 0.95rem,
      3: 1.05rem,
      4: 1.2rem,
      5: 1.5rem,
    ),
  ),
  tafsir: (
    tablet: (
      1: 0.85rem,
      2: 1.1rem,
      3: 1.2rem,
      4: 1.4rem,
      5: 2rem,
    ),
    mobile: (
      1: 0.85rem,
      2: 0.95rem,
      3: 1.1rem,
      4: 1.2rem,
      5: 1.4rem,
    ),
  )
);

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function get-scales($name, $device-type, $map) {
  @return map-deep-get($map, $name, $device-type);
}

@mixin generate-font-scales($name) {
  $mobile-scales: null;
  $tablet-scales: null;
  $tablet-line-height-scales: null;

  @if map.has-key($scales-map, $name) {
    $mobile-scales: get-scales($name, "mobile", $scales-map);
    $tablet-scales: get-scales($name, "tablet", $scales-map);
    $tablet-line-height-scales: get-scales($name, "tablet", $line-heights-map);
  } @else {
    $mobile-scales: get-scales("default", "mobile", $scales-map);
    $tablet-scales: get-scales("default", "tablet", $scales-map);
    $tablet-line-height-scales: get-scales(
      "default",
      "tablet",
      $line-heights-map
    );
  }

  @for $i from 1 through constants.$maximum-font-step {
    .#{$name}-font-size-#{$i} {
      --font-size: #{map.get($mobile-scales, $i)};
      --line-height: unset;
      @include breakpoints.tablet {
        --font-size: #{map.get($tablet-scales, $i)};
        --line-height: #{map.get($tablet-line-height-scales, $i)};
      }
      font-size: var(--font-size);
    }
  }
}

// Sets a max-width based on the device width. Inspired by the bootstrap container (https://getbootstrap.com/docs/5.0/layout/containers/).
$large-device-width-ratio: 95%;
$quran-max-container-width: 112rem;
@mixin quranContainer() {
  width: 100%;

  @include breakpoints.tablet {
    width: $large-device-width-ratio;
    max-width: $quran-max-container-width;
  }
}

$page-container-max-width: 80rem;
@mixin pageContainer {
  max-width: $page-container-max-width;
  @include breakpoints.tablet {
    width: 80%;
  }
}
