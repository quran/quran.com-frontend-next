@use "src/styles/constants";
@use "src/styles/breakpoints";
@use "sass:map";

@mixin center-horizontally {
  display: inline-block;
  margin-block-start: auto;
  margin-inline-end: auto;
  margin-block-end: auto;
  margin-inline-start: auto;
}

@mixin center-vertically {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin lighten-background-color {
  background-image: linear-gradient(
    to right,
    var(--color-background-lighten),
    var(--color-background-lighten)
  );
}

// IMPORTANT NOTE: IF WE CHANGE ANY VALUE HERE, WE SHOULD ALSO ADAPT THE NEW VALUE TO THE FALLBACK TEXT INSIDE GLYPHWORD.MODULE.SCSS

$scales-map: (
  default: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 6.7,
      5: 6.85,
    ),
    mobile: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 10,
      5: 12,
    ),
  ),
  qpc_uthmani_hafs: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 6.7,
      5: 6.85,
    ),
    mobile: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 10,
      5: 12,
    ),
  ),
  text_indopak: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 6.7,
      5: 6.85,
    ),
    mobile: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 10,
      5: 12,
    ),
  ),
  code_v2: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 6.7,
      5: 6.85,
    ),
    mobile: (
      1: 4,
      2: 5,
      3: 6,
      4: 8.5,
      5: 10,
    ),
  ),
  code_v1: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 6.7,
      5: 6.85,
    ),
    mobile: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 10,
      5: 12,
    ),
  ),
  quran-reading: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 6.7,
      5: 6.85,
    ),
    mobile: (
      1: 4,
      2: 5,
      3: 6.3,
      4: 10,
      5: 12,
    ),
  ),
  quran-translation: (
    desktop: (
      1: 1.5,
      2: 2,
      3: 2.25,
      4: 2.5,
      5: 3,
    ),
    tablet: (
      1: 2.6,
      2: 3.2,
      3: 4,
      4: 5,
      5: 6,
    ),
    mobile: (
      1: 4,
      2: 6,
      3: 7,
      4: 9,
      5: 11,
    ),
  ),
  translation: (
    desktop: (
      1: 0.9,
      2: 1,
      3: 1.15,
      4: 1.5,
      5: 2,
    ),
    tablet: (
      1: 1.8,
      2: 2.1,
      3: 2.5,
      4: 3.2,
      5: 4.2,
    ),
    mobile: (
      1: 2.5,
      2: 3,
      3: 4,
      4: 5,
      5: 6,
    ),
  ),
  tafsir: (
    desktop: (
      1: 1,
      2: 1.2,
      3: 1.4,
      4: 1.8,
      5: 2,
    ),
    tablet: (
      1: 1.8,
      2: 2.1,
      3: 2.8,
      4: 3.6,
      5: 4.5,
    ),
    mobile: (
      1: 3,
      2: 3.5,
      3: 4,
      4: 5,
      5: 6,
    ),
  ),
);

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function get-scales($name, $device-type: "mobile") {
  @return map-deep-get($scales-map, $name, $device-type);
}

@mixin generate-font-sizes($name) {
  $mobile-scales: null;
  $desktop-scales: null;
  $tablet-scales: null;

  @if map.has-key($scales-map, $name) {
    $mobile-scales: get-scales($name, "mobile");
    $tablet-scales: get-scales($name, "tablet");
    $desktop-scales: get-scales($name, "desktop");
  } @else {
    $mobile-scales: get-scales("default", "mobile");
    $tablet-scales: get-scales("default", "tablet");
    $desktop-scales: get-scales("default", "desktop");
  }

  @for $i from 1 through constants.$maximum-font-step {
    .#{$name}-font-size-#{$i} {
      font-size: #{map.get($mobile-scales, $i)}vw;
      @include breakpoints.tablet {
        font-size: #{map.get($tablet-scales, $i)}vw;
      }
      @include breakpoints.desktop {
        font-size: #{map.get($desktop-scales, $i)}vw;
      }
    }
  }
}

// Sets a max-width based on the device width. Inspired by the bootstrap container (https://getbootstrap.com/docs/5.0/layout/containers/).
$large-device-width-ratio: 95%;
$max-container-width: 112rem;
@mixin container() {
  width: 100%;

  @include breakpoints.tablet {
    width: $large-device-width-ratio;
    max-width: $max-container-width;
  }
}
